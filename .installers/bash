#!/usr/bin/env bash
set -e

# Installer script for monorepo-based releases

REPO="architect-platform/architect-cli"
NAME="architect-cli"
ASSET_TYPE="jar"
APPLICATION_NAME="architect"
PREFIX="architect-cli"
ASSET_NAME="${NAME}.${ASSET_TYPE}"

INSTALL_DIR="$HOME/.${NAME}"
BIN_PATH="$INSTALL_DIR/$APPLICATION_NAME"
FINAL_ASSET="$INSTALL_DIR/$ASSET_NAME"

echo "📦 Installing $NAME from $REPO"
mkdir -p "$INSTALL_DIR"

cat <<'EOF' > "$BIN_PATH"
#!/bin/bash
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
EOF

echo "exec java -jar $FINAL_ASSET \"\$@\"" >> "$BIN_PATH"
chmod +x "$BIN_PATH"

# --- 1️⃣ Handle local build ---
if [ "$2" == "local" ]; then
  echo "Building $APPLICATION_NAME locally..."
  ./gradlew ":$NAME:build"
  cp "$NAME/build/libs/$ASSET_NAME" "$FINAL_ASSET"
  echo "✅ Local build complete"
  exit 0
fi

# --- 2️⃣ Prepare GitHub API headers ---
USER_AGENT="ArchitectInstaller/1.0"
AUTH_HEADER=""
if [[ -n "$GITHUB_TOKEN" ]]; then
  AUTH_HEADER="Authorization: Bearer $GITHUB_TOKEN"
fi

# --- 3️⃣ Get latest release tag for prefix ---
echo "Fetching latest releases for prefix '$PREFIX'..."
TAG=$(curl -s -H "User-Agent: $USER_AGENT" ${AUTH_HEADER:+-H "$AUTH_HEADER"} \
      "https://api.github.com/repos/$REPO/releases" | \
      jq -r ".[].name" | grep "^${PREFIX}" | sort -Vr | head -n 1)

if [ -z "$TAG" ]; then
  echo "❌ No release tag found for prefix '$PREFIX'."
  exit 1
fi
echo "Found latest release: $TAG"

# --- 4️⃣ Get asset download URL ---
RELEASE_URL="https://api.github.com/repos/$REPO/releases/tags/$TAG"
ASSET_URL=$(curl -s -H "User-Agent: $USER_AGENT" ${AUTH_HEADER:+-H "$AUTH_HEADER"} \
  "$RELEASE_URL" | jq -r ".assets[] | select(.name == \"$ASSET_NAME\") | .browser_download_url")

if [[ -z "$ASSET_URL" || "$ASSET_URL" == "null" ]]; then
  echo "❌ Asset '$ASSET_NAME' not found for tag '$TAG'."
  exit 1
fi

# --- 5️⃣ Download the asset ---
echo "⬇️  Downloading $ASSET_NAME from $ASSET_URL..."
curl -sL -H "User-Agent: $USER_AGENT" ${AUTH_HEADER:+-H "$AUTH_HEADER"} \
  -o "$FINAL_ASSET" "$ASSET_URL"
echo "✅ Download complete"

# --- 6️⃣ Add to PATH if missing ---
SHELL_NAME=$(basename "$SHELL")
PROFILE="$HOME/.profile"
[[ "$SHELL_NAME" == "bash" ]] && PROFILE="$HOME/.bashrc"
[[ "$SHELL_NAME" == "zsh" ]] && PROFILE="$HOME/.zshrc"

if ! grep -qs "export PATH=\"$HOME/.$NAME:\$PATH\"" "$PROFILE"; then
  echo "export PATH=\"$HOME/.$NAME:\$PATH\"" >> "$PROFILE"
  echo "✅ Added $INSTALL_DIR to PATH in $PROFILE"
  # non eseguire "source" in CI per evitare side-effects
  if [ -t 1 ]; then
    source "$PROFILE"
  fi
fi

echo "🚀 Installed $NAME successfully — run with: $APPLICATION_NAME"
