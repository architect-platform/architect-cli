#!/usr/bin/env bash
# Installer script generated by Architect
# Downloads and installs the specified release asset from GitHub into CI PATH.

set -euo pipefail

REPO="architect-platform/architect-cli"
NAME="architect-cli"
ASSET_TYPE="jar"
APPLICATION_NAME="architect"
PREFIX="architect-cli"

BIN_DIR="$HOME/.local/bin"
mkdir -p "$BIN_DIR"

ASSET_NAME="${NAME}.${ASSET_TYPE}"
ASSET_PATH="${BIN_DIR}/${ASSET_NAME}"
EXECUTABLE_PATH="${BIN_DIR}/${APPLICATION_NAME}"

# Header di base richiesto da GitHub
HEADERS=(-H "User-Agent: Architect-CI")

# Aggiungi Authorization se presente
if [[ -n "${GITHUB_TOKEN:-}" ]]; then
  HEADERS+=(-H "Authorization: Bearer ${GITHUB_TOKEN}")
fi

echo "🔍 Searching release for prefix '${PREFIX}' in ${REPO}..."

# 1️⃣ Ottieni la lista dei release
RELEASES_JSON=$(curl -sSL "${HEADERS[@]}" "https://api.github.com/repos/${REPO}/releases")

# Verifica che sia JSON valido
if ! echo "$RELEASES_JSON" | jq empty >/dev/null 2>&1; then
  echo "❌ Invalid JSON received from GitHub. Maybe missing User-Agent or token?"
  echo "$RELEASES_JSON"
  exit 1
fi

# 2️⃣ Trova il primo release che inizia col prefix
RELEASE_URL=$(echo "$RELEASES_JSON" | jq -r "[.[] | select(.tag_name | startswith(\"${PREFIX}\"))][0].url")

if [[ -z "${RELEASE_URL}" || "${RELEASE_URL}" == "null" ]]; then
  echo "❌ No release found for prefix '${PREFIX}' in ${REPO}"
  exit 1
fi

# 3️⃣ Ottieni URL dell’asset giusto
ASSET_URL=$(curl -sSL "${HEADERS[@]}" "${RELEASE_URL}" \
  | jq -r ".assets[] | select(.name == \"${ASSET_NAME}\") | .browser_download_url")

if [[ -z "${ASSET_URL}" || "${ASSET_URL}" == "null" ]]; then
  echo "❌ Asset '${ASSET_NAME}' not found in release."
  exit 1
fi

# 4️⃣ Scarica l’asset
echo "⬇️  Downloading ${ASSET_NAME} from ${ASSET_URL}..."
curl -fsSL "${HEADERS[@]}" -o "${ASSET_PATH}" "${ASSET_URL}"

if [[ ! -s "${ASSET_PATH}" ]]; then
  echo "❌ Download failed or empty file: ${ASSET_PATH}"
  exit 1
fi

# 5️⃣ Wrapper eseguibile
echo "⚙️ Creating executable wrapper for ${APPLICATION_NAME}..."
cat > "${EXECUTABLE_PATH}" <<'EOF'
#!/usr/bin/env bash
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
EOF
echo "exec java -jar \"\${DIR}/${ASSET_NAME}\" \"\$@\"" >> "${EXECUTABLE_PATH}"
chmod +x "${ASSET_PATH}" "${EXECUTABLE_PATH}"

# 6️⃣ Aggiorna PATH in ambiente CI (es. GitHub Actions)
if [[ -n "${GITHUB_PATH:-}" ]]; then
  echo "${BIN_DIR}" >> "${GITHUB_PATH}"
fi

echo "✅ ${APPLICATION_NAME} installed successfully!"
echo "   Binary: ${EXECUTABLE_PATH}"
echo "   Asset:  ${ASSET_PATH}"

